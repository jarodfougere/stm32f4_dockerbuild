{
	"folders": [
		{
            "path": "C:\\Users\\cmatt\\Documents\\rimot-lowpower-sensorboard",
		}
    ],
    "settings": {

        // TEXT EDITOR
        "editor.tabCompletion": "on",
        "editor.wordWrap": "wordWrapColumn",
        "editor.detectIndentation": false,
        "extensions.ignoreRecommendations": false,
        "editor.autoClosingBrackets": "languageDefined",
        "editor.defaultFormatter": "xaver.clang-format",
        "window.zoomLevel": 1,

        // FILE SYSTEM
        "explorer.confirmDragAndDrop": false,
        "workbench.startupEditor": "none",
        "files.autoSave": "afterDelay",

        //CMAKE
        "cmake.configureOnOpen": false,
        "cmake.default.buildDirectory": "${workspaceFolder}/Build",
        "cmake.default.generator": "MinGW Makefiles",
        "iarvsc.configuration": "Debug",
        "cmake.cmakePath": "cmake",         //cmake.exe MUST BE IN $PATH
        "cmake.buildDirectory": "${workspaceFolder}/Build/Pipeline",
        "cmake.buildBeforeRun": true,
        "cmake.sourceDirectory": "${workspaceFolder}/CMake",
        "cmake.revealLog": "always",

        //PIPELINE CONFIGURATION WILL GENERATE DEPRECATION WARNING BUT 
        //WARNING IS ACTUALLY NOT ACCRUATE. IN ANY CASE, IT IS RESPONSIBILITY
        //OF THE EXTENSION DEVELOPER TO MAINTAIN.
        //
        //SEE : https://github.com/microsoft/vscode-cmake-tools/issues/710
        "cmake.useCMakeServer": true,

        //The goal is to automate everything 
        //within the workspace so we ignore any previously-configured user kits
        "cmake.ignoreKitEnv": true,     

        // IAR EMBEDDED WORKBENCH
        "iar.enabled": true,
        "iarvsc.ewp": "${workspaceFolder}\\EWARM\\*.ewp",
        "iarvsc.workbench": "${workspaceFolder}\\EWARM\\*.ewp",

        //Carl TODO: FIGURE OUT A WAY TO AUTOMATE DETECTION OF IAR TOOLCHAINS
        "iarvsc.compiler": "C:\\Program Files (x86)\\IAR Systems\\Embedded Workbench 8.4\\arm\\bin\\iccarm.exe",

        // BOOKMARKS
        "bookmarks.sideBar.expanded": true,

        //C and C++ LANGUAGE SETTINGS
        //https://code.visualstudio.com/docs/languages/cpp
        "C_Cpp.updateChannel": "Insiders",
        "C_Cpp.default.configurationProvider": "ms-vscode.cmake-tools",


        // LANGUAGES 
        "files.associations": {
            "*.c"   : "c",
            "*.h"   : "c",
            "*.hpp" : "cpp",
            "*.cpp" : "cpp",
            "*.s"   : "asm",
            "*as"   : "asm",
            "*.asm" : "asm",
            "*.js"  : "javascript",
            "*.py"  : "python",
            "*.md"  : "markdown",
            "*.sh"  : "shell",     //UNIX SHELL (NOT BASH)
            "*.bash": "bash",      //UNIX BASH SHELL
            "*.bat" : "bat",       //WINDOWS BATCH (DOS shell)
            "*.ps"  : "powershell" //WINDOWS POWERSHELL
        }
    },

    // WORKSPACE EXTENSIONS
    "extensions": {
        "recommendations": [
            "ms-vscode.cmake-tools", 
            "ms-vscode.cpptools",
            "oderwat.indent-rainbow", 
            "pluyckx.iar-vsc", 
            "zip696.iar-tool",
            "CoenraadS.bracket-pair-colorizer",
            "alefragnani.Bookmarks",
            "twxs.cmake",
            "eamodio.gitlens",
            "GuillaumeLegrain.vscode-icf-syntax",
            "amapleaf.linker-script",
            "ZixuanWang.linkerscript",
            "dan-c-underwood.arm",
            "cheshirekow.cmake-format"
        ],
    },

    // WORKSPACE TASKS
    "tasks": {
        "version": "2.0.0",
        "tasks": [
            {
                "label": "CMake : configure (CURRENT SYSTEM)",
                "type": "shell",
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "focus": false,
                    "panel": "shared",
                    "showReuseMessage": true,
                    "clear": false
                },
                "options": {
                    "cwd": "${workspaceRoot}"
                },
                "command": "rm -r ${workspaceRoot}/Build/*; cmake -S ${workspaceRoot} -B ${workspaceRoot}/Build -G 'MinGW Makefiles' -D BUILD_TARGET_SYSTEM=SYSTEM_PROCESSOR"
            },
            {
                "label": "CMake : configure (IAR : EXTERNAL_PROCESSOR)",
                "type": "shell",
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "focus": false,
                    "panel": "shared",
                    "showReuseMessage": true,
                    "clear": false
                },
                "options": {
                    "cwd": "${workspaceRoot}/"
                },
                "command": "rm -r ${workspaceRoot}/Build/*; cmake -S ${workspaceRoot} -B ${workspaceRoot}/Build -G 'MinGW Makefiles' -D BUILD_TARGET_SYSTEM=EXTERNAL_PROCESSOR"
            },
            {
                "label": "CMake : build",
                "type": "shell",
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "focus": false,
                    "panel": "shared",
                    "showReuseMessage": true,
                    "clear": false
                },
                "options": {
                    "cwd": "${workspaceRoot}/Build"
                },
                "command": "make",
                "group": {
                    "kind": "build",
                    "isDefault": true
                },
    
    
                //NOT SURE HOW TO AUTOMATE THE PROBLEM MATCHER AT THIS LEVEL
                "problemMatcher" : [
                    "$gcc",
                    "$iar-cc",
                    "$iar-linker",
                    "$msCompile"
                ]
            }
        ]
    },
    
    // WORKSPACE RUNTIME (DEBUG/TEST/ETC)
    "launch": {
        "version": "0.2.0",
        "configurations": [
            {
                "name": "(Windows) Launch",
                "type": "cppvsdbg",
                "request": "launch",
                "program": "enter program name, for example ${workspaceFolder}/a.exe",
                "args": [],
                "stopAtEntry": true,
                "cwd": "${workspaceFolder}",
                "environment": [],
                "externalConsole": false
            },
            {
                "name": "gcc.exe build and debug active file",
                "type": "cppdbg",
                "request": "launch",
                "program": "${workspaceFolder}/a.exe",
                "args": [],
                "stopAtEntry": true,
                "cwd": "${workspaceFolder}",
                "environment": [],
                "externalConsole": false,
                "MIMode": "gdb",
                "miDebuggerPath": "C:\\MinGW\\bin\\gdb.exe",
                "setupCommands": [
                    {
                        "description": "Enable pretty-printing for gdb",
                        "text": "-enable-pretty-printing",
                        "ignoreFailures": true
                    }
                ],
            }
        ],

        // THIS IS MEANT TO BE USED FOR PARALLEL DEBUGGING BUT I REFUSE TO 
        // TOUCH IT BECAUSE SO FAR ALL I'VE MANAGED TO DO IS BREAK EVERYTHING
        //
        //docs:
        //https://www.google.com/search?q=vscode+compounds&rlz=1C1CHBF_enCA872CA872&oq=vscode+compounds&aqs=chrome.0.0l6.3080j0j7&sourceid=chrome&ie=UTF-8
        "compounds": []
    }

}